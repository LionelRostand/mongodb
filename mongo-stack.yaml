---
apiVersion: v1
kind: Namespace
metadata:
  name: mongo-app
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongodb-pv
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  local:
    path: /mnt/data/mongodb
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - vmi2656707.contaboserver.net  # <- Change ici si besoin
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
  namespace: mongo-app
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-init-script
  namespace: mongo-app
data:
  init.js: |
    db.createUser({
      user: 'admin',
      pwd: 'admin123',
      roles: [{ role: 'root', db: 'admin' }]
    });
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: mongo-app
spec:
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:7
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mongo-data
          persistentVolumeClaim:
            claimName: mongodb-pvc
        - name: init-script
          configMap:
            name: mongo-init-script
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: mongo-app
spec:
  selector:
    app: mongodb
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-express
  namespace: mongo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-express
  template:
    metadata:
      labels:
        app: mongo-express
    spec:
      containers:
        - name: mongo-express
          image: mongo-express:latest
          ports:
            - containerPort: 8081
          env:
            - name: ME_CONFIG_MONGODB_SERVER
              value: mongodb-service.mongo-app.svc.cluster.local
            - name: ME_CONFIG_MONGODB_ADMINUSERNAME
              value: admin
            - name: ME_CONFIG_MONGODB_ADMINPASSWORD
              value: admin123
            - name: ME_CONFIG_MONGODB_AUTH_DATABASE
              value: admin
            - name: ME_CONFIG_BASICAUTH_USERNAME
              value: admin
            - name: ME_CONFIG_BASICAUTH_PASSWORD
              value: admin123
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-express
  namespace: mongo-app
spec:
  selector:
    app: mongo-express
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
  type: NodePort
