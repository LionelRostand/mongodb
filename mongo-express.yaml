apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-nginx-conf
data:
  default.conf: |
    server {
      listen 443 ssl;
      ssl_certificate /etc/nginx/certs/tls.crt;
      ssl_certificate_key /etc/nginx/certs/tls.key;

      location / {
        proxy_pass http://localhost:8081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-ui
  template:
    metadata:
      labels:
        app: mongo-ui
    spec:
      containers:
      - name: mongo-express
        image: mongo-express:1.0.0
        env:
        - name: ME_CONFIG_MONGODB_SERVER
          value: "mongodb"
        # SÃ©curiser avec utilisateur/mot de passe (optionnel)
        # - name: ME_CONFIG_BASICAUTH_USERNAME
        #   value: "admin"
        # - name: ME_CONFIG_BASICAUTH_PASSWORD
        #   value: "motdepasse"
        ports:
        - containerPort: 8081
      - name: nginx
        image: nginx:stable
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/conf.d
        - name: tls-secret
          mountPath: /etc/nginx/certs
        ports:
        - containerPort: 443
      volumes:
      - name: nginx-conf
        configMap:
          name: mongo-nginx-conf
      - name: tls-secret
        secret:
          secretName: mongo-tls
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-ui
spec:
  type: NodePort
  selector:
    app: mongo-ui
  ports:
  - name: https
    port: 443
    targetPort: 443
    nodePort: 32443
